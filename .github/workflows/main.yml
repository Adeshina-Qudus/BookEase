name: Build and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/your-docker-image:latest .

    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/your-docker-image:latest

    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli

    - name: Deploy to EC2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESSKEYID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRETACCESSKEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        INSTANCE_ID: ${{ secrets.INSTANCE_ID }}
        KEY_NAME: ${{ secrets.KEY_NAME }}
        INSTANCE_USER: ${{ secrets.INSTANCE_USER }}
      run: |
        PUBLIC_DNS=$(aws ec2 describe-instances \
            --instance-ids $INSTANCE_ID \
            --query 'Reservations[0].Instances[0].PublicDnsName' \
            --output text)

        echo "Instance $INSTANCE_ID is running at $PUBLIC_DNS"

        # Copy the SSH key to the runner
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > $HOME/.ssh/${{ secrets.KEY_NAME }}.pem
        chmod 600 $HOME/.ssh/${{ secrets.KEY_NAME }}.pem

        SSH_COMMANDS="sudo yum update -y
                      sudo amazon-linux-extras install docker -y
                      sudo service docker start
                      sudo usermod -a -G docker ec2-user
